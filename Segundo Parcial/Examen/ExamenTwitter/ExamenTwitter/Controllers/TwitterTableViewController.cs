// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using ExamenTwitter.Models;
using Foundation;
using UIKit;

namespace ExamenTwitter
{
    public partial class TwitterTableViewController : UIViewController, IUITableViewDataSource, IUISearchResultsUpdating
	{
        #region Class Variables

        public TwitterModel ModeloTwitter { get; set; }

        List<TweetModel> lstTweets;

        UISearchController searchControllerTwitter;

        string strSearchRefresh;
        UIRefreshControl refreshControl;

        #endregion


        #region Constructors

        public TwitterTableViewController(IntPtr handle) : base(handle)
        {

        }

        #endregion

        #region Controller Life Cycle

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            lstTweets = new List<TweetModel>();

            //Registro Dummy de ejemplo.
            TweetModel tweetModel = new TweetModel("Nombre.", "Texto del Tweet", 0, 0, null);
            lstTweets.Add(tweetModel);


            TwitterLazy.SharedInstance.TweetsFetched += SharedInstance_TweetsFetched;
            TwitterLazy.SharedInstance.FetchTweetsFailed += SharedInstance_FetchTweetsFailed;


            searchControllerTwitter = new UISearchController(searchResultsController: null)
            {
                DimsBackgroundDuringPresentation = true,
                SearchResultsUpdater = this
            };


            searchControllerTwitter.SearchBar.AutocorrectionType = UITextAutocorrectionType.No;
            searchControllerTwitter.SearchBar.AutocapitalizationType = UITextAutocapitalizationType.None;


            strSearchRefresh = "";
            refreshControl = new UIRefreshControl();

            refreshControl.ValueChanged += RefreshControl_ValueChanged;
            TwitterTableView.RefreshControl = refreshControl;

            TwitterTableView.DataSource = this;
            TwitterTableView.TableHeaderView = searchControllerTwitter.SearchBar;
        }

        #endregion

        #region Twitter Events

        void SharedInstance_TweetsFetched(object sender, Models.TwitterLazy.TweetEventArgs e)
        {
            lstTweets = e.ListaTweets;

            InvokeOnMainThread(() => {

                if (refreshControl.Refreshing)
                {
                    refreshControl.EndRefreshing();
                }

                TwitterTableView.ReloadData();
            });
        }

        void SharedInstance_FetchTweetsFailed(object sender, Models.TwitterLazy.ErrorEventArgs e)
        {
            InvokeOnMainThread(() => {

                searchControllerTwitter.Active = false;

                if (refreshControl.Refreshing)
                {
                    refreshControl.EndRefreshing();
                }

                UIAlertController alert = UIAlertController.Create("ERROR:", e.Message, UIAlertControllerStyle.Alert);
                alert.AddAction(UIAlertAction.Create("Ok", UIAlertActionStyle.Cancel, null));
                PresentViewController(alert, true, null);
            });
        }

        #endregion


        #region Search Controller

        public void UpdateSearchResultsForSearchController(UISearchController searchController)
        {
            string strSearch = searchController.SearchBar.Text;

            if (strSearch != "")
            {
                strSearchRefresh = strSearch;

                TwitterLazy.SharedInstance.FetchTweets(ModeloTwitter.TwitterContext, strSearch);

            }

        }

        #endregion


        void RefreshControl_ValueChanged(object sender, EventArgs e)
        {
            if (strSearchRefresh != "")
            {
                TwitterLazy.SharedInstance.FetchTweets(ModeloTwitter.TwitterContext, strSearchRefresh);
            }
            else
            {
                refreshControl.EndRefreshing();
            }
        }


        #region TableView DataSource

        public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            var cell = TwitterTableView.DequeueReusableCell(nameof(TweetTableViewCell), indexPath) as TweetTableViewCell;


            cell.UserImage = lstTweets[indexPath.Row].UserImage;
            cell.UserName = lstTweets[indexPath.Row].Name;
            cell.FavoriteCount = $"Favoritos: {lstTweets[indexPath.Row].FavoriteCount.ToString()}";
            cell.RetweetCount = $"Retweets: {lstTweets[indexPath.Row].RetweetedCount.ToString()}";
            cell.TweetDescription = lstTweets[indexPath.Row].Text;



            return cell;
        }

        public nint RowsInSection(UITableView tableView, nint section)
        {
            return lstTweets.Count;
        }

        #endregion



    }
}
